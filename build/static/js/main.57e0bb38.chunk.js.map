{"version":3,"sources":["components/Navbar.js","components/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","src","alt","width","height","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","s","title","subtit","aria-checked","onClick","toglemode","role","htmlFor","new12","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","name","onChange","event","target","backgroundColor","border","thenewtext","toUpperCase","toLowerCase","split","length","App","setMode","_useState3","_useState4","titname","setTitName","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.57e0bb38.chunk.js","sourcesContent":["import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <img\r\n              src=\"./Imgs/logg.png\"\r\n              alt=\"\"\r\n              className=\"img-new\"\r\n              width=\"30\"\r\n              height=\"24\"\r\n            />\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" s href=\"/\">\r\n                  {props.title}\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  {props.subtit}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n            <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" aria-checked=\"false\" onClick={props.toglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label text-${props.mode=== 'light' ? 'dark': 'light'}`} htmlFor=\"flexSwitchCheckDefault\">{props.new12}</label>\r\n</div>\r\n        </div>\r\n      </nav>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n// // PROP TYPES SETTING \r\n\r\n// Navbar.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   subtit: PropTypes.number,\r\n// };\r\n\r\n// // PROP DEFAULT TYPES SETTING \r\n\r\n// Navbar.defaultProps = {\r\n//   title: 'SOOME',\r\n//   subtit: 323232,\r\n// };\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Textarea(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const butnfunc = () => {\r\n    let thenewtext = text.toUpperCase();\r\n    setText(thenewtext);\r\n  };\r\n  const butnfuncmin = () => {\r\n    let thenewtext = text.toLowerCase();\r\n    setText(thenewtext);\r\n  };\r\n  const butnfuncclear = () => {\r\n    let thenewtext = \"\";\r\n    setText(thenewtext);\r\n  };\r\n  const onChangeevent = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div >\r\n        <div className=\"container mt-3\">\r\n          <h1 style={{color: props.mode=== 'dark' ? 'white': 'black'}}>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n            <label\r\n              htmlFor=\"exampleFormControlTextarea1\"\r\n              className=\"form-label\"\r\n            ></label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"8\"\r\n              value={text}\r\n              name=\"fullname\"\r\n              onChange={onChangeevent}\r\n              style={{backgroundColor: props.mode=== 'dark' ? '#859db9': 'white',\r\n              color: props.mode=== 'dark' ? 'white': 'black',\r\n            border : props.mode=== 'dark' ? '1px solid black': '1px solid black'}}\r\n            ></textarea>\r\n          </div>\r\n          <button className={`btn btn-${props.mode=== 'dark' ? 'warning': 'primary'} mx-2`} onClick={butnfunc}>\r\n            Capitalize\r\n          </button>\r\n          <button className={`btn btn-${props.mode=== 'dark' ? 'warning': 'primary'} mx-2`} onClick={butnfuncmin}>\r\n            Minimize\r\n          </button>\r\n          <button className={`btn btn-${props.mode=== 'dark' ? 'warning': 'primary'} mx-2`} onClick={butnfuncclear}>\r\n            Clear text\r\n          </button>\r\n          {/* <button className=\"btn btn-primary mx-2\" onClick={darkmode}>\r\n           {titname}\r\n          </button> */}\r\n          {/* <button className=\"btn btn-primary mx-2\" onClick={butnfuncundo}>UNDO </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={butnfuncredo}>REDO</button> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"container mt-4\" style={{color: props.mode=== 'dark' ? 'white': 'black'}}>\r\n        <h3>Your text summary is</h3>\r\n        <p>\r\n          {text.split(\" \").length} Words and {text.length}{\" \"}\r\n          Characters\r\n        </p>\r\n        <h4>Preview the text</h4>\r\n        <p>{text.length === 0 ? \"Enter something above to preview here\" :text} </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import Home from \"./home\";\nimport Navbar from \"./components/Navbar\";\nimport Textarea from \"./components/Textarea\";\nimport React, { useState } from \"react\";\n// import About from \"./components/About\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [titname, setTitName] = useState(\"Activate Dark Mode\");\n\n  const changemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      setTitName(\"Activate Dark Mode\");\n      document.body.style.backgroundColor = \"white\";\n      document.title= \"Fonter App\";\n\n    } else {\n      setMode(\"dark\");\n      setTitName(\"Activate Light Mode\");\n      document.body.style.backgroundColor = \"#002451\";\n      document.title= \"Fonter Dark Mode\";\n    }\n  };\n\n  return (\n    <>\n    \n      <Navbar\n        title=\"Home\"\n        subtit=\"About\"\n        toglemode={changemode}\n        mode={mode}\n        new12={titname}\n      />\n\n      <Textarea heading=\"Enter some text here\" mode={mode} />\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}